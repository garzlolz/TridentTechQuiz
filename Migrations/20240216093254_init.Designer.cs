// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TridentTech.DBModels;

#nullable disable

namespace TridentTech.Migrations
{
    [DbContext(typeof(TridentTechContext))]
    [Migration("20240216093254_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TridentTech.DBModels.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("class_name")
                        .HasComment("課程名稱");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("class_description")
                        .HasComment("課程描述");

                    b.HasKey("Id");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("TridentTech.DBModels.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("teacher_name")
                        .HasComment("老師姓名");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email")
                        .HasComment("E-mail");

                    b.HasKey("Id");

                    b.ToTable("teachers", t =>
                        {
                            t.HasComment("老師Table");
                        });
                });

            modelBuilder.Entity("TridentTech.DBModels.TeacherClass", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("StartAt")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeacherId", "ClassId", "StartAt");

                    b.HasIndex("ClassId");

                    b.ToTable("teacher_classes", t =>
                        {
                            t.HasComment("老師Table");
                        });
                });

            modelBuilder.Entity("TridentTech.DBModels.TeacherClass", b =>
                {
                    b.HasOne("TridentTech.DBModels.Class", "Class")
                        .WithMany("TeacherClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TridentTech.DBModels.Teacher", "Teacher")
                        .WithMany("TeacherClasses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("TridentTech.DBModels.Class", b =>
                {
                    b.Navigation("TeacherClasses");
                });

            modelBuilder.Entity("TridentTech.DBModels.Teacher", b =>
                {
                    b.Navigation("TeacherClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
